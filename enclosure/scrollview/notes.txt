// NSScrollView
// +   @property BOOL allowsMagnification
// +   @property BOOL autohidesScrollers
// +   @property BOOL automaticallyAdjustsContentInsets
// +   @property BOOL drawsBackground
// +   @property BOOL hasHorizontalRuler
// +   @property BOOL hasHorizontalScroller
// +   @property BOOL hasVerticalRuler
// +   @property BOOL hasVerticalScroller
// +   @property BOOL rulersVisible
// +   @property BOOL scrollsDynamically
// +   @property BOOL usesPredominantAxisScrolling
// +   @property CGFloat horizontalLineScroll
// +   @property CGFloat horizontalPageScroll
// +   @property CGFloat lineScroll
// +   @property CGFloat magnification
// +   @property CGFloat maxMagnification
// +   @property CGFloat minMagnification
// +   @property CGFloat pageScroll
// +   @property CGFloat verticalLineScroll
// +   @property CGFloat verticalPageScroll
// +   @property NSBorderType borderType
// +   @property NSScrollElasticity horizontalScrollElasticity
// +   @property NSScrollElasticity verticalScrollElasticity
// +   @property NSScrollerKnobStyle scrollerKnobStyle
// +   @property NSScrollerStyle scrollerStyle
// +   @property NSScrollViewFindBarPosition findBarPosition
// +   @property(copy) NSColor *backgroundColor
// +   @property NSEdgeInsets contentInsets
// +   @property NSEdgeInsets scrollerInsets
// +   @property(assign) id documentView
// +   - (void)flashScrollers
// +   - (void)magnifyToFitRect:(NSRect)rect
// +   - (void)setMagnification:(CGFloat)magnification centeredAtPoint:(NSPoint)point

//     - (void)addFloatingSubview:(NSView *)view forAxis:(NSEventGestureAxis)axis
//     - (void)scrollWheel:(NSEvent *)theEvent

// -   - (void)reflectScrolledClipView:(NSClipView *)aClipView  -- shouldn't need
// -   - (void)tile                                             -- shouldn't need
// ?   @property(readonly) NSRect documentVisibleRect           -- needed?
// ?   @property(readonly) NSSize contentSize                   -- needed?
// ?   @property(strong) NSClipView *contentView                -- may be automatic; test
// ?   @property(strong) NSCursor *documentCursor               -- may be automatic; test
// ?   @property(strong) NSRulerView *horizontalRulerView       -- may be automatic; test
// ?   @property(strong) NSRulerView *verticalRulerView         -- may be automatic; test
// ?   @property(strong) NSScroller *horizontalScroller         -- may be automatic; test
// ?   @property(strong) NSScroller *verticalScroller           -- may be automatic; test

add setAutoresizingMask from