/*
 * Socket address for IPv6
 */
#if !defined(_POSIX_C_SOURCE) || defined(_DARWIN_C_SOURCE)
#define SIN6_LEN
#endif /* (_POSIX_C_SOURCE && !_DARWIN_C_SOURCE) */
struct sockaddr_in6 {
    __uint8_t   sin6_len;   /* length of this struct(sa_family_t) */
    sa_family_t sin6_family;    /* AF_INET6 (sa_family_t) */
    in_port_t   sin6_port;  /* Transport layer port # (in_port_t) */
    __uint32_t  sin6_flowinfo;  /* IP6 flow information */
    struct in6_addr sin6_addr;  /* IP6 address */
    __uint32_t  sin6_scope_id;  /* scope zone index */
};

/*
 * Socket address, internet style.
 */
struct sockaddr_in {
    __uint8_t   sin_len;
    sa_family_t sin_family;
    in_port_t   sin_port;
    struct  in_addr sin_addr;
    char        sin_zero[8];
};



/* System family socket address */
struct sockaddr_sys {
    u_char      ss_len;     /* sizeof(struct sockaddr_sys) */
    u_char      ss_family;  /* AF_SYSTEM */
    u_int16_t   ss_sysaddr;     /* protocol address in AF_SYSTEM */
    u_int32_t   ss_reserved[7]; /* reserved to the protocol use */
};

/*
 * [XSI] Structure used by kernel to store most addresses.
 */
struct sockaddr {
    __uint8_t   sa_len;     /* total length */
    sa_family_t sa_family;  /* [XSI] address family */
    char        sa_data[14];    /* [XSI] addr value (actually larger) */
};

/*
 * [XSI] sockaddr_storage
 */
struct sockaddr_storage {
    __uint8_t   ss_len;     /* address length */
    sa_family_t ss_family;  /* [XSI] address family */
    char            __ss_pad1[_SS_PAD1SIZE];
    __int64_t   __ss_align; /* force structure storage alignment */
    char            __ss_pad2[_SS_PAD2SIZE];
};

/*!
    @struct sockaddr_ctl
    @discussion The controller address structure is used to establish
        contact between a user client and a kernel controller. The
        sc_id/sc_unit uniquely identify each controller. sc_id is a
        unique identifier assigned to the controller. The identifier can
        be assigned by the system at registration time or be a 32-bit
        creator code obtained from Apple Computer. sc_unit is a unit
        number for this sc_id, and is privately used by the kernel
        controller to identify several instances of the controller.
    @field sc_len The length of the structure.
    @field sc_family AF_SYSTEM.
    @field ss_sysaddr AF_SYS_KERNCONTROL.
    @field sc_id Controller unique identifier.
    @field sc_unit Kernel controller private unit number.
    @field sc_reserved Reserved, must be set to zero.
*/
struct sockaddr_ctl {
    u_char  sc_len;     /* depends on size of bundle ID string */
    u_char  sc_family;  /* AF_SYSTEM */
    u_int16_t   ss_sysaddr; /* AF_SYS_KERNCONTROL */
    u_int32_t   sc_id;      /* Controller unique identifier  */
    u_int32_t   sc_unit;    /* Developer private unit number */
    u_int32_t   sc_reserved[5];
};

struct sockaddr_inarp {
    u_char  sin_len;
    u_char  sin_family;
    u_short sin_port;
    struct  in_addr sin_addr;
    struct  in_addr sin_srcaddr;
    u_short sin_tos;
    u_short sin_other;
#define SIN_PROXY   0x1
#define SIN_ROUTER  0x2
};

/*
 * Structure of a Link-Level sockaddr:
 */
struct sockaddr_dl {
    u_char  sdl_len;    /* Total length of sockaddr */
    u_char  sdl_family; /* AF_LINK */
    u_short sdl_index;  /* if != 0, system given index for interface */
    u_char  sdl_type;   /* interface type */
    u_char  sdl_nlen;   /* interface name length, no trailing 0 reqd. */
    u_char  sdl_alen;   /* link level address length */
    u_char  sdl_slen;   /* link layer selector length */
    char    sdl_data[12];   /* minimum work area, can be larger;
                   contains both if name and ll address */
#ifndef __APPLE__
    /* For TokenRing */
    u_short sdl_rcf;    /* source routing control */
    u_short sdl_route[16];  /* source routing information */
#endif
};
