[
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [
      {
        "name" : "feedback",
        "stripped_doc" : [
          "Generate haptic feedback on the currently active force touch device.",
          ""
        ],
        "doc" : "Generate haptic feedback on the currently active force touch device.\n\nParameters:\n * type - a string which must be one of the following values:\n   * \"generic\"   - A general haptic feedback pattern. Use this when no other feedback patterns apply.\n   * \"alignment\" - A haptic feedback pattern to be used in response to the alignment of an object the user is dragging around. For example, this pattern of feedback could be used in a drawing app when the user drags a shape into alignment with with another shape. Other scenarios where this type of feedback could be used might include scaling an object to fit within specific dimensions, positioning an object at a preferred location, or reaching the beginning\/minimum or end\/maximum of something, such as a track view in an audio\/video app.\n   * \"level\"     - A haptic feedback pattern to be used as the user moves between discrete levels of pressure. This pattern of feedback is used by multilevel accelerator buttons.\n * immediate - an optional boolean, default false, indicating whether the feedback should occur immediately (true) or when the screen has finished updating (false)\n\nReturns:\n * true if a feedback performer object exists within the current system, or false if it does not.\n\nNotes:\n * The existence of a feedback performer object is dependent upon the OS X version and not necessarily on the hardware available -- laptops with a trackpad which predates force touch will return true, even though this function does nothing on such systems.\n * Even on systems with a force touch device, this function will only generate feedback when the device is active or being touched -- from the Apple docs: \"In some cases, the system may override a call to this method. For example, a Force Touch trackpad won’t provide haptic feedback if the user isn’t touching the trackpad.\"",
        "def" : "hs._asm.forcetouch.feedback(type, [immediate]) -> boolean",
        "notes" : [
          " * The existence of a feedback performer object is dependent upon the OS X version and not necessarily on the hardware available -- laptops with a trackpad which predates force touch will return true, even though this function does nothing on such systems.",
          " * Even on systems with a force touch device, this function will only generate feedback when the device is active or being touched -- from the Apple docs: \"In some cases, the system may override a call to this method. For example, a Force Touch trackpad won’t provide haptic feedback if the user isn’t touching the trackpad.\""
        ],
        "signature" : "hs._asm.forcetouch.feedback(type, [immediate]) -> boolean",
        "type" : "Function",
        "returns" : [
          " * true if a feedback performer object exists within the current system, or false if it does not.",
          ""
        ],
        "desc" : "Generate haptic feedback on the currently active force touch device.",
        "parameters" : [
          " * type - a string which must be one of the following values:",
          "   * \"generic\"   - A general haptic feedback pattern. Use this when no other feedback patterns apply.",
          "   * \"alignment\" - A haptic feedback pattern to be used in response to the alignment of an object the user is dragging around. For example, this pattern of feedback could be used in a drawing app when the user drags a shape into alignment with with another shape. Other scenarios where this type of feedback could be used might include scaling an object to fit within specific dimensions, positioning an object at a preferred location, or reaching the beginning\/minimum or end\/maximum of something, such as a track view in an audio\/video app.",
          "   * \"level\"     - A haptic feedback pattern to be used as the user moves between discrete levels of pressure. This pattern of feedback is used by multilevel accelerator buttons.",
          " * immediate - an optional boolean, default false, indicating whether the feedback should occur immediately (true) or when the screen has finished updating (false)",
          ""
        ]
      },
      {
        "name" : "deviceAttached",
        "stripped_doc" : [
          "Returns a boolean indicating whether or not a force touch capable device is currently attached to the system.",
          ""
        ],
        "doc" : "Returns a boolean indicating whether or not a force touch capable device is currently attached to the system.\n\nParameters:\n * None\n\nReturns:\n * a boolean value indicating whether or not a force touch capable device is currently attached to the system.",
        "def" : "hs._asm.forcetouch.deviceAttached() -> boolean",
        "notes" : [

        ],
        "signature" : "hs._asm.forcetouch.deviceAttached() -> boolean",
        "type" : "Function",
        "returns" : [
          " * a boolean value indicating whether or not a force touch capable device is currently attached to the system."
        ],
        "desc" : "Returns a boolean indicating whether or not a force touch capable device is currently attached to the system.",
        "parameters" : [
          " * None",
          ""
        ]
      }
    ],
    "Variable" : [

    ],
    "stripped_doc" : [

    ],
    "desc" : "Some experimentation with force touch devices.",
    "Deprecated" : [

    ],
    "type" : "Module",
    "Constructor" : [

    ],
    "Field" : [

    ],
    "Method" : [

    ],
    "Command" : [

    ],
    "items" : [
      {
        "name" : "deviceAttached",
        "stripped_doc" : [
          "Returns a boolean indicating whether or not a force touch capable device is currently attached to the system.",
          ""
        ],
        "doc" : "Returns a boolean indicating whether or not a force touch capable device is currently attached to the system.\n\nParameters:\n * None\n\nReturns:\n * a boolean value indicating whether or not a force touch capable device is currently attached to the system.",
        "def" : "hs._asm.forcetouch.deviceAttached() -> boolean",
        "notes" : [

        ],
        "signature" : "hs._asm.forcetouch.deviceAttached() -> boolean",
        "type" : "Function",
        "returns" : [
          " * a boolean value indicating whether or not a force touch capable device is currently attached to the system."
        ],
        "desc" : "Returns a boolean indicating whether or not a force touch capable device is currently attached to the system.",
        "parameters" : [
          " * None",
          ""
        ]
      },
      {
        "name" : "feedback",
        "stripped_doc" : [
          "Generate haptic feedback on the currently active force touch device.",
          ""
        ],
        "doc" : "Generate haptic feedback on the currently active force touch device.\n\nParameters:\n * type - a string which must be one of the following values:\n   * \"generic\"   - A general haptic feedback pattern. Use this when no other feedback patterns apply.\n   * \"alignment\" - A haptic feedback pattern to be used in response to the alignment of an object the user is dragging around. For example, this pattern of feedback could be used in a drawing app when the user drags a shape into alignment with with another shape. Other scenarios where this type of feedback could be used might include scaling an object to fit within specific dimensions, positioning an object at a preferred location, or reaching the beginning\/minimum or end\/maximum of something, such as a track view in an audio\/video app.\n   * \"level\"     - A haptic feedback pattern to be used as the user moves between discrete levels of pressure. This pattern of feedback is used by multilevel accelerator buttons.\n * immediate - an optional boolean, default false, indicating whether the feedback should occur immediately (true) or when the screen has finished updating (false)\n\nReturns:\n * true if a feedback performer object exists within the current system, or false if it does not.\n\nNotes:\n * The existence of a feedback performer object is dependent upon the OS X version and not necessarily on the hardware available -- laptops with a trackpad which predates force touch will return true, even though this function does nothing on such systems.\n * Even on systems with a force touch device, this function will only generate feedback when the device is active or being touched -- from the Apple docs: \"In some cases, the system may override a call to this method. For example, a Force Touch trackpad won’t provide haptic feedback if the user isn’t touching the trackpad.\"",
        "def" : "hs._asm.forcetouch.feedback(type, [immediate]) -> boolean",
        "notes" : [
          " * The existence of a feedback performer object is dependent upon the OS X version and not necessarily on the hardware available -- laptops with a trackpad which predates force touch will return true, even though this function does nothing on such systems.",
          " * Even on systems with a force touch device, this function will only generate feedback when the device is active or being touched -- from the Apple docs: \"In some cases, the system may override a call to this method. For example, a Force Touch trackpad won’t provide haptic feedback if the user isn’t touching the trackpad.\""
        ],
        "signature" : "hs._asm.forcetouch.feedback(type, [immediate]) -> boolean",
        "type" : "Function",
        "returns" : [
          " * true if a feedback performer object exists within the current system, or false if it does not.",
          ""
        ],
        "desc" : "Generate haptic feedback on the currently active force touch device.",
        "parameters" : [
          " * type - a string which must be one of the following values:",
          "   * \"generic\"   - A general haptic feedback pattern. Use this when no other feedback patterns apply.",
          "   * \"alignment\" - A haptic feedback pattern to be used in response to the alignment of an object the user is dragging around. For example, this pattern of feedback could be used in a drawing app when the user drags a shape into alignment with with another shape. Other scenarios where this type of feedback could be used might include scaling an object to fit within specific dimensions, positioning an object at a preferred location, or reaching the beginning\/minimum or end\/maximum of something, such as a track view in an audio\/video app.",
          "   * \"level\"     - A haptic feedback pattern to be used as the user moves between discrete levels of pressure. This pattern of feedback is used by multilevel accelerator buttons.",
          " * immediate - an optional boolean, default false, indicating whether the feedback should occur immediately (true) or when the screen has finished updating (false)",
          ""
        ]
      }
    ],
    "doc" : "Some experimentation with force touch devices.\n\nRequires 10.11 or later.\nBased in part on code from https:\/\/eternalstorms.wordpress.com\/2015\/11\/16\/how-to-detect-force-touch-capable-devices-on-the-mac\/ and https:\/\/github.com\/eternalstorms\/NSBeginAlertSheet-using-Blocks.",
    "name" : "hs._asm.forcetouch"
  }
]
